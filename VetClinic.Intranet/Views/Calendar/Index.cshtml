@model VetClinic.Data.Helpers.ScheduleBlocks
@{
    ViewBag.Title = "Harmonogram";
}

    <table class="table-borderless text-center col-sm-8" id="reservationCalendar">
        <thead>
            <tr>
                <td>
                    <form class="m-4" asp-action="Index" method="post">
                        <input type="hidden" name="Navigation" value="previous" />
                        <input type="hidden" value="@Model.First" name="first" />
                        <input type="submit" value="<<" />
                    </form>
                </td>
                <td colspan="5">
                    @{
                        //informacja o przegladanym tygodniu
                        DateTime nextWeek = Model.First.AddDays(7);
                    }
                    Tydzień @Model.First.ToString("dd/MM/yyyy") - @nextWeek.ToString("dd/MM/yyyy")

                </td>
                <td>
                    <form class="m-4" asp-action="Index" method="post">
                        <input type="hidden" name="Navigation" value="next" />
                        <input type="hidden" value="@Model.First" name="first" />
                        <input type="submit" value=">>" />
                    </form>
                </td>
            </tr>
        </thead>
        <tr>
            <td class="mt-2 ml-3">
                <h5>Poniedziałek</h5>
            </td>
            <td>
                <h5>Wtorek</h5>
            </td>
            <td>
                <h5>Środa</h5>
            </td>
            <td class="mt-2 ml-3">
                <h5>Czwartek</h5>
            </td>
            <td class="mt-2 ml-3">
                <h5>Piatek</h5>
            </td>
            <td class="mt-2 ml-3">
                <h5>Sobota</h5>
            </td>
            <td class="mt-2 ml-3">
                <h5>Niedziela</h5>
            </td>
        </tr>

        <tr>
            @{
                //daty poszczegolnych dni w tygodniu
                DateTime renderedDay = new DateTime(@Model.First.Year, @Model.First.Month, @Model.First.Day, 0, 0, 0);
                for (int d = 0; d < 7; d++)
                {

                    // if Sunday
                    if (d == 6)
                    {
                        <td class="calendar-holiday">@renderedDay.ToString("dd/MM/yyyy")</td>
                    }
                    // if Saturday
                    //else if (renderedDay.DayOfWeek == DayOfWeek.Saturday)
                    else if (d == 7)
                    {
                        <td class="calendar-holiday">@renderedDay.ToString("dd/MM/yyyy")</td>
                    }
                    // if normal day
                    else
                    {
                        <td>@renderedDay.ToString("dd/MM/yyyy")</td>
                    }
                    renderedDay = renderedDay.Add(new TimeSpan(1, 0, 0, 0, 0));
                }
            }
        </tr>
        @{ 
            //do sprawdzania czy zmienila sie godzina - wyswietlona zostanie aktualna
            TimeSpan lastHour = new TimeSpan(Model.ScheduleBlock.ElementAt(0).Time.Hours, 0, 0);
            DateTime block;

            bool BlockFree = true;

            <tr class="m-5">
                <td colspan="7" class="text-left">
                    <h5 class="mt-2 ml-3">@lastHour.Hours:00</h5>
                </td>
            </tr>

            foreach (var itemBlock in Model.ScheduleBlock)
            {
                block = new DateTime(@Model.First.Year, @Model.First.Month, @Model.First.Day, itemBlock.Time.Hours, itemBlock.Time.Minutes, 0);
                if (itemBlock.Time.Hours != lastHour.Hours)
                {
                    <tr class="m-5">
                        <td colspan="7" class="text-left">
                            <h5 class="mt-2 ml-3">@block.ToString("HH"):00</h5>
                        </td>
                    </tr>
                    lastHour = new TimeSpan(block.Hour, 0, 0);
                }
                <tr>
                    @for (int j = 0; j < 7; j++)
                    {
                        <td>
                            @foreach (var item in Model.Reservation)
                            {

                                if (item.DateOfVisit.Equals(block))
                                {
                                    BlockFree = false;
                                    <button class="btn btn-danger mr-3 ml-3" onclick="location.href='@Url.Action("Edit","Reservations", new {@id = @item.ReservationID})'">
                                        @block.ToString("HH/mm") Zajęty


                                    </button>
                                }
                            }
                            @if (BlockFree == true)
                            {

                                @if (Model.InaccessibleDay.Contains(new DateTime(block.Year, block.Month, block.Day, 0, 0, 0)))
                                {
                                    <button type="button" class="btn btn-info  mr-3 ml-3" disabled>Dzień Wolny</button>
                                    BlockFree = false;
                                }
                                else
                                {
                                    <form asp-action="CreateFromCalendar" method="post">
                                        <input type="hidden" name="DateOfVisit" value="@block" />
                                        <button type="submit" class="btn btn-success  mr-3 ml-3">@block.ToString("HH/mm") Wolny</button>
                                    </form>
                                }
                            }

                        </td>
                        block = block.AddDays(1);
                        BlockFree = true;
                    }
                </tr>
                block = block - new TimeSpan(7, 0, 0, 0);
            }
        }
    </table>
