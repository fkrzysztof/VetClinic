@model VetClinic.Data.Helpers.ScheduleBlocks
@{
    ViewBag.Title = "Kalendarz rezerwacji";
}
    <div class="row d-flex justify-content-center">
        <div class="col-sm-12">
            
            <div class="float-sm-right">
                <a class="btn btn-outline-primary mb-3" role="button" aria-haspopup="true" aria-expanded="false" asp-action="Index" asp-controller="Calendar">
                    Aktualny tydzień
                </a>
            </div>
        </div>
        <div class="col-sm-10 text-center">
            <table class="table-borderless text-center">
                <tr>
                    <td>
                        @{
                            DateTime Today = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 0, 0, 0);
                            DateTime Sunday = new DateTime(Model.First.Year, Model.First.Month, Model.First.Day, 0, 0, 0).AddDays(6);
                            DateTime Quarter = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 0, 0, 0).AddMonths(3);
                            //
                            Sunday = Sunday + (new TimeSpan(6, 0, 0, 0));
                            //pokaz gdy jest  w zakresie przed lub po

                            @*@if (DateTime.Compare(Today, Model.First) == -1 || DateTime.Compare(Today, Sunday) == 1)*@
                            //{
                                <form class="m-sm-3" asp-action="Index" method="post">
                                    <input type="hidden" name="Navigation" value="previous" />
                                    <input type="hidden" value="@Model.First" name="first" />
                                    <input class="btn btn-outline-primary mb-sm-4" type="submit" value="<<" />
                                </form>
                            @*}*@
                        }
                    </td>
                    <td colspan="5">
                        @{
                            //informacja o przegladanym tygodniu pokazujemy ZAKRES
                            DateTime nextWeek = Model.First.AddDays(7);
                        }
                        <h5>Tydzień @Model.First.ToString("dd/MM/yyyy") - @nextWeek.ToString("dd/MM/yyyy")</h5>
                        <br />
                    </td>
                    <td>
                        @if (DateTime.Compare(nextWeek, Quarter) == -1)
                        {
                            <form class="m-sm-3" asp-action="Index" method="post">
                                <input type="hidden" name="Navigation" value="next" />
                                <input type="hidden" value="@Model.First" name="first" />
                                <input class="btn btn-outline-primary  mb-sm-4" type="submit" value=">>" />
                            </form>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <h5>Poniedziałek</h5>
                    </td>
                    <td>
                        <h5>Wtorek</h5>
                    </td>
                    <td>
                        <h5>Środa</h5>
                    </td>
                    <td>
                        <h5>Czwartek</h5>
                    </td>
                    <td>
                        <h5>Piatek</h5>
                    </td>
                    <td>
                        <h5>Sobota</h5>
                    </td>
                    <td>
                        <h5>Niedziela</h5>
                    </td>
                </tr>
                <tr>
                    @{
                        //daty poszczegolnych dni w tygodniu
                        DateTime renderedDay = new DateTime(@Model.First.Year, @Model.First.Month, @Model.First.Day, 0, 0, 0);
                        for (int d = 0; d < 7; d++)
                        {
                            <td>@renderedDay.ToString("dd/MM/yyyy")</td>
                            renderedDay = renderedDay.Add(new TimeSpan(1, 0, 0, 0, 0));
                        }
                    }
                </tr>
                @{
                    //do sprawdzania czy zmienila sie godzina - wyswietlona zostanie aktualna
                    TimeSpan lastHour = new TimeSpan(Model.ScheduleBlock.ElementAt(0).Time.Hours, 0, 0);
                    DateTime block;

                    bool BlockFree = true;

                    //  <tr class="mt-sm-2 mb-sm-2">
                    <tr class="">
                        <td colspan="7" class="text-left">
                            <h5 class="mt-sm-2 ml-sm-3">@lastHour.Hours:00</h5>
                        </td>
                    </tr>
                    //przechodzimy po zadeklarowanych w bazie danych godzinach wizyt
                    foreach (var itemBlock in Model.ScheduleBlock)
                    {
                        block = new DateTime(@Model.First.Year, @Model.First.Month, @Model.First.Day, itemBlock.Time.Hours, itemBlock.Time.Minutes, 0);
                        //sprawdzamy czy godzina sie zmienila
                        if (itemBlock.Time.Hours != lastHour.Hours)
                        {
                            <tr class="mt-sm-2 mb-sm-3">
                                <td colspan="7" class="text-left">
                                    <h5 class="mt-sm-2 ml-sm-3">@block.ToString("HH"):00</h5>
                                </td>
                            </tr>
                            lastHour = new TimeSpan(block.Hour, 0, 0);
                        }
                        <tr>
                            @*tydzien*@
                            @for (int j = 0; j < 7; j++)
                            {
                                <td>
                                    @foreach (var item in Model.Reservation)
                                    {
                                        //sprawdzamy czy termin wizyty nie jest juz zajety
                                        if (item.DateOfVisit.Equals(block))
                                        {
                                            BlockFree = false;
                                            <button class="btn btn-danger mr-sm-3 ml-sm-3" onclick="location.href='@Url.Action("Edit","Reservations", new {@id = @item.ReservationID})'">
                                                @block.ToString("HH:mm")<br />Zajęty
                                            </button>
                                        }
                                    }
                                    @if (BlockFree == true)
                                    {
                                        //sprawdzamy czy ten dzien nie jest wolny od pracy
                                        @if (Model.InaccessibleDay.Contains(new DateTime(block.Year, block.Month, block.Day, 0, 0, 0)))
                                        {
                                            <button type="button" class="btn btn-info  mr-sm-3 ml-sm-3" disabled>Dzień<br />Wolny</button>
                                            BlockFree = false;
                                        }
                                        else
                                        //jest wolny
                                        {
                                            <form asp-action="CreateNew" asp-controller="Reservations" method="post">
                                                <input type="hidden" name="DateOfVisit" value="@block" />
                                                <button type="submit" class="btn btn-success  mr-sm-3 ml-sm-3"
                                                        @if ((DateTime.Compare(block, DateTime.Now) == -1)) { @: disabled
                                                        }>
                                                    @block.ToString("HH:mm")<br />Wolny
                                                </button>
                                            </form>
                                        }
                                    }
                                </td>
                                block = block.AddDays(1);
                                BlockFree = true;
                            }
                        </tr>
                        block = block - new TimeSpan(7, 0, 0, 0);
                    }
                }
            </table>
            <br />
            <hr />
            <br />
        </div>
        <div class="col-sm-8">
            <table class="table-borderless">
                <tr>
                    <td><button class="btn btn-danger mr-sm-3 ml-sm-3">13:00<br />Zajęty</button></td>
                    <td>Termin jest zajęty, przekierowanie do podglądu wizyty.</td>
                </tr>
                <tr>
                    <td><button type="button" class="btn btn-info  mr-sm-3 ml-sm-3" disabled>Dzień<br />Wolny</button></td>
                    <td>W tym dniu przychodnia nie pracuje.</td>
                </tr>
                <tr>
                    <td><button class="btn btn btn-success mr-sm-3 ml-sm-3">13:00<br />Wolny</button></td>
                    <td>Termin wolny, rezerwacja jest możliwa, przekierowanie do rezerwacji w wybranym terminie.</td>
                </tr>
                <tr>
                    <td><button class="btn btn btn-success mr-sm-3 ml-sm-3" onclick="location.href='#'" disabled>13:00<br />Wolny</button></td>
                    <td>Termin nieaktualny.</td>
                </tr>
            </table>
        </div>

    </div>