@model VetClinic.Data.Data.Clinic.Reservation

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DateTime DateOfVisit = Convert.ToDateTime(ViewData["DateOfVisit"]);
}

<h4>Dodaj nowy element:</h4>
<h2>Rezerwacje</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ReservationUserID" class="control-label"></label>
                <select asp-for="ReservationUserID" class="form-control" asp-items="ViewBag.ReservationUserID"></select>
            </div>
            <div class="form-group">
                <label asp-for="PatientID" class="control-label"></label>
                <select asp-for="PatientID" class="form-control" asp-items="ViewBag.PatientID"></select>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>




            @*Bartek - zamiast tego pobieram z ViewData["DateOfVisit"] = DateOfVisit; i wysylam w <input type=hidden:*@


            @***************************************************************************************************************************@

            @*<div class="form-group">
        <label asp-for="DateOfVisit" class="control-label"></label>
        <input asp-for="DateOfVisit" class="form-control" />
        <span asp-validation-for="DateOfVisit" class="text-danger"></span>
        </div>*@




            <input type="hidden" name="DateOfVisitFromCalendar" value="@DateOfVisit" />
            <h3>Data wizyty pobrana z harmonogramu @DateOfVisit.ToString("dd/MM/yyyy, hh:mm") </h3>

          
            @*Wszystko to jak isActiv itd nie jest tu potrzebne*@

            @**************************************************************************************************************************@


            @*<div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
            </label>
        </div>
        <div class="form-group">
            <label asp-for="AddedDate" class="control-label"></label>
            <input asp-for="AddedDate" class="form-control" />
            <span asp-validation-for="AddedDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="UpdatedDate" class="control-label"></label>
            <input asp-for="UpdatedDate" class="form-control" />
            <span asp-validation-for="UpdatedDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="AddedUserID" class="control-label"></label>
            <select asp-for="AddedUserID" class="form-control" asp-items="ViewBag.AddedUserID"></select>
        </div>
        <div class="form-group">
            <label asp-for="UpdatedUserID" class="control-label"></label>
            <select asp-for="UpdatedUserID" class="form-control" asp-items="ViewBag.UpdatedUserID"></select>
        </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<a class="btn btn-outline-primary" role="button" asp-action="Index" asp-controller="Calendar">
    Kalendarz Rezerwacji
</a>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
